<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABIAEwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9/KKKKACvKvHn7WWh+Gbr7PpcL65MjbZHSTyoFwWBw5BLHIHR
        dpDZDdq4r9pn4uN4t1oeGdKecW1pOYrznYt1MGACYPO1GB6nBbnHyqx5fQfAdvpq77kLdTdeR8iccjHf
        6n24FfxR40fScrZTjamT8MuN6btKrZSvJbqEWuW0Xo5S5uZ35VZJy/R8l4Sw0aEcXml25aqC007t769t
        Leui6K6/bI8RPdSGHTtFjhLExo8crsq54BYOATjvgZ9BW14Z/bO/1MesaL/e86eyl+u3bE34A5f1PtXP
        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
        BRRRQB//2Q==
</value>
  </data>
</root>